@model SitecoreDev.Web.Custom.Fields.CreditCard

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>View</title>
</head>
<body>
    <h3>Are you sure you want to delete this?</h3>
    <div>
        <h4>CreditCard</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.ClientID)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.ClientID)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.EnableTheming)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.EnableTheming)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.SkinID)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.SkinID)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.EnableViewState)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.EnableViewState)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.TemplateSourceDirectory)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.TemplateSourceDirectory)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.AppRelativeTemplateSourceDirectory)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.AppRelativeTemplateSourceDirectory)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Visible)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Visible)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.UniqueID)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.UniqueID)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.AccessKey)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.AccessKey)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.ControlStyleCreated)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.ControlStyleCreated)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.CssClass)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.CssClass)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.DisabledCssClass)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.DisabledCssClass)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Enabled)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Enabled)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.HasAttributes)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.HasAttributes)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.SupportsDisabledAttribute)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.SupportsDisabledAttribute)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.TabIndex)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.TabIndex)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.ToolTip)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.ToolTip)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Background)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Background)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Border)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Border)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Bordered)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Bordered)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Cacheable)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Cacheable)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.CacheKey)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.CacheKey)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.CacheTimeout)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.CacheTimeout)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.CachingID)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.CachingID)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.ClassAttribute)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.ClassAttribute)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Clear)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Clear)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.CssStyle)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.CssStyle)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Cursor)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Cursor)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Database)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Database)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.DataSource)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.DataSource)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.DesignMode)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.DesignMode)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.DisableDebug)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.DisableDebug)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.DisableDots)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.DisableDots)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.DisableSecurity)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.DisableSecurity)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.DrawDots)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.DrawDots)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Float)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Float)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Foreground)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Foreground)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.LiveDisplay)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.LiveDisplay)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.LoginRendering)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.LoginRendering)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Margin)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Margin)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Padding)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Padding)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Parameters)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Parameters)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.RenderingID)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.RenderingID)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.RenderingName)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.RenderingName)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.StyleAttribute)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.StyleAttribute)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.VaryByData)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.VaryByData)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.VaryByDevice)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.VaryByDevice)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.VaryByLogin)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.VaryByLogin)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.VaryByParm)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.VaryByParm)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.VaryByQueryString)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.VaryByQueryString)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.VaryByUser)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.VaryByUser)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.ClearOnIndexUpdate)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.ClearOnIndexUpdate)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Action)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Action)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Activate)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Activate)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Activation)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Activation)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Class)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Class)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.ContextMenu)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.ContextMenu)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.ControlAttributes)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.ControlAttributes)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.DataContext)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.DataContext)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Deactivate)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Deactivate)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Disabled)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Disabled)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.FontBold)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.FontBold)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.FontItalic)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.FontItalic)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.FontName)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.FontName)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.FontOverline)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.FontOverline)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.FontStrikeout)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.FontStrikeout)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.FontUnderline)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.FontUnderline)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.KeyDown)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.KeyDown)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.KeyFilter)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.KeyFilter)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Name)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Name)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.RollOver)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.RollOver)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.TabStop)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.TabStop)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Value)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Value)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.ReadOnly)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.ReadOnly)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Change)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Change)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.TrackModified)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.TrackModified)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Hidden)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Hidden)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Placeholder)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Placeholder)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.ItemLanguage)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.ItemLanguage)
            </dd>
    
        </dl>
    
        @using (Html.BeginForm()) {
            @Html.AntiForgeryToken()
    
            <div class="form-actions no-color">
                <input type="submit" value="Delete" class="btn btn-default" /> |
                @Html.ActionLink("Back to List", "Index")
            </div>
        }
    </div>
</body>
</html>
